@startuml Exchange System Design Architecture
actor Trader
top to bottom direction

package "Clients" {
    Trader --> [Web Client]
    Trader --> [Mobile App Client]
    Trader --> [Trading Program]
}

[Web Client] --> [REST API Gateway]
[Mobile App Client] --> [REST API Gateway]
[Trading Program] --> [REST API Gateway]

[Trading Program] <--> [Websocket FIX Gateway]

[Web Client] <--> [Market Data Websocket]
[Mobile App Client] <--> [Market Data Websocket]
[Trading Program] <--> [Market Data Websocket]

package "Fix API" {
    [Web Client] <--> [Websocket FIX Gateway]
    [Mobile App Client] <--> [Websocket FIX Gateway]
}

package "Order Entry API" {
    [REST API Gateway] --> [Order Entry API LB]
    [Order Entry API LB] --> [Order Entry API Service 1]
    [Order Entry API LB] --> [Order Entry API Service 2]
    [Order Entry API LB] --> [Order Entry API Service X]
}

[Order Entry API Service 1] --> [Ledger Service]
[Order Entry API Service 1] --> [Trading Engine]

[Websocket FIX Gateway] --> [Ledger Service]
[Websocket FIX Gateway] --> [Trading Engine]

database "Ledger" {
    [Ledger Service] --> [User Account Table]
}

[Ledger Service] --> [Users Service]

database "Users" {
    [Users Service] --> [Users Table]
}

queue "Message Bus"

[Trading Engine] --> [Message Bus]
[Trading Engine] --> [Data Feed Service]

[Message Bus] --> [Reporting]
[Message Bus] --> [Clearing Service]

database "Clearing (Postgres)" {
    [Clearing Service] --> [Clearing Table]
}

@enduml
